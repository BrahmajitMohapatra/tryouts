= Tryouts - v0.6 BETA

Tryouts is a high-level testing library for your command-line applications and Ruby codes.

NOTE: The DSL syntax has changed significantly from 0.5 and command-line app tests are currently disabled. 

== Syntax

Tryouts is a bit different than other testing libraries. Test definitions are organized in a similar way as Shoulda tests (although the keywords in the syntax are different). 

=== Terminology

* Tryout: a set of drills (just like basketball tryouts is a set of drills)
* Drill: a single test. 
* Dream: the expected outcome of a drill. There's always one or more dream per drill. 

== Testing Ruby codes (an API)

Tryouts employs the same approach for testing Ruby codes. The return value of the drill block is compared to the expectation defined by the dream. Here is an example of including dreams inside the tryout definition. 

    library :caesars, "../path/to/caesars/lib"

    tryout "Common Usage" do
      dream 3
      drill "Check the return value" do
        12 / 4
      end
        
      dream :Proc, :class
      drill "Check the return value class" do
        Proc.new do
          :anything
        end
      end
      
      dream NameError, :exception
      drill "A test can pass based on the exception" do
        raise NameError
      end
      
      dream /\w\d\w \d\w\d/, :match
      drill "Knows where Santa Claus lives", 'H0H 0H0'
    end


== BETA Notice

This library is very new (est. 2009-05-19) and has not been vetted by the scrutiny of time. In particular you can expect:

* The test definition syntax may change in future releases. 
* Unexpected errors. 


== On Threads

Tryouts does some funky stuff to make it simple to write tests. This "funky stuff" means that this library is *not thread-safe at definition-time*. However, once all tryouts files are parsed (or in OO-syntax, once all objects are created), this class should be *thread-safe at drill-time*. 

== More Info

* Check out the sourcecodes[http://github.com/delano/tryouts]
* Read the rdocs[http://tryouts.rubyforge.org/]
* About Solutious[http://solutious.com/about/]

== Thanks

* Everyone at Utrecht.rb and Amsterdam.rb

== Credits

* Delano (@solutious.com)

== Related Projects

* Context[http://github.com/jeremymcanally/context/tree/master]
* Testy[http://github.com/ahoward/testy/tree/master]
* Expectations[http://expectations.rubyforge.org/]
* Zebra[http://github.com/giraffesoft/zebra/tree/master]

== License

See: LICENSE.txt